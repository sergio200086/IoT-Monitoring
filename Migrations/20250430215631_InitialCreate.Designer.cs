// <auto-generated />
using System;
using IoTMonitoringAPI.DAL;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace IoTMonitoringAPI.Migrations
{
    [DbContext(typeof(MonitoringContext))]
    [Migration("20250430215631_InitialCreate")]
    partial class InitialCreate
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.4")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("IoTMonitoringAPI.Models.Group", b =>
                {
                    b.Property<int>("ID")
                        .HasColumnType("integer");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Network")
                        .HasColumnType("text");

                    b.HasKey("ID");

                    b.ToTable("Group", (string)null);
                });

            modelBuilder.Entity("IoTMonitoringAPI.Models.GroupSensor", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("ID"));

                    b.Property<int>("GroupID")
                        .HasColumnType("integer");

                    b.Property<int>("SensorDataID")
                        .HasColumnType("integer");

                    b.HasKey("ID");

                    b.HasIndex("GroupID");

                    b.HasIndex("SensorDataID");

                    b.ToTable("GroupSensor", (string)null);
                });

            modelBuilder.Entity("IoTMonitoringAPI.Models.SensorData", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("ID"));

                    b.Property<string>("SensorName")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<DateTime>("TimeStamp")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("Type")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Unity")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<float>("Value")
                        .HasColumnType("real");

                    b.HasKey("ID");

                    b.ToTable("SensorData", (string)null);
                });

            modelBuilder.Entity("IoTMonitoringAPI.Models.GroupSensor", b =>
                {
                    b.HasOne("IoTMonitoringAPI.Models.Group", "Group")
                        .WithMany("GroupSensor")
                        .HasForeignKey("GroupID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("IoTMonitoringAPI.Models.SensorData", "SensorData")
                        .WithMany("SensorGroup")
                        .HasForeignKey("SensorDataID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Group");

                    b.Navigation("SensorData");
                });

            modelBuilder.Entity("IoTMonitoringAPI.Models.Group", b =>
                {
                    b.Navigation("GroupSensor");
                });

            modelBuilder.Entity("IoTMonitoringAPI.Models.SensorData", b =>
                {
                    b.Navigation("SensorGroup");
                });
#pragma warning restore 612, 618
        }
    }
}
